# configure here all parameters for the Slurm-web REST API

[cors]
# give here the list of the domains from where the origin is authorized,
# separated by commas
#
# example : authorized_origins = http://example1.com,http://example2.com
authorized_origins = http://localhost,http://server.local:8000,http://192.168.90.121:8000

[config]
# Set to 'enable' to activate authentication.
# Authentication is based on LDAP, so an LDAP server and the good configuration
# for it, below in this file, are required.
authentication = enable
# Absolute path to the secret key file. This key is used to sign tokens
# on server-side and make sure they are not modified during network
# communications. The secret is required only if authentication is enabled.
# Make sure this file is readable by root and WCGI user only, and not
# world-readable.
#secret_key = /etc/slurm-web/secret.key
# Set to 'enable' to activate cache.
cache = enable
# Path for racks description (default to /etc/slurm-web/racks.xml).
racksxml =

[roles]
# Allow guests users or not. Guests users have the 'all' role. Disabled by
# default.
# guests = disabled

# The `all` role if for all users that do not either have the user or admin
# role, including guests. This role can be:
#
# - disabled: users with the all role cannot access the REST API
# - enabled: users with the all role can access the REST API
#
# Enabled by default.
#all = enabled

# The roles members can be defined with a list of groups (whose names
# are prefixed by @) and logins.
user = @chimistes
admin = @admin,pierre

# Give here restricted fields about jobs for each role, separated by commas
restricted_fields_for_all = command
restricted_fields_for_user = command
restricted_fields_for_admin =

[acl]
# You can set here an access control list for each view of the dashboard for
# this cluster.
# This feature requires authentication to be enabled.
# For each view, you can give a list of roles to define who can access to this
# view.
# If no ACL is provided for a view, every authenticated user can access to
# this view.
# i.e. ``jobs = admin`` implies that the jobs view will be available only for
# every user which has role of 'admin'.
# If you give an empty value for an entry (i.e. ``jobs =``), the corresponding
# view will not be accessible for anybody.
#
# Available views are : [
#   'jobs', 'jobsmap', 'partitions', 'reservations', 'qos', 'racks', '3dview',
#   'gantt', 'topology'
# ]

[ldap]
# Configure here settings to connect to your LDAP server.
uri = ldap://admin:389
base_people = ou=people,dc=cluster,dc=local
base_group = ou=group,dc=cluster,dc=local
# Optional path to CA certificate. Required only if ldaps protocol is used and
# CA certification not available in system certificates chain.
# cacert = /etc/ssl/certs/cacert.pem
expiration = 1296000

[cache]
# address for Redis server (default to host=localhost, port=6379)
redis_host =
redis_port =
# TTL for jobs (default to 10 seconds)
jobs_expiration =
# TTL for other informations (default to 60 seconds)
global_expiration =
